@mixin screen($size, $type: max, $pixels: $breakpoint-small) {
	@if $size == 'small' {
		@media screen and ($type + -width: $breakpoint-small) {
			@content;
		}
	}
	@else if $size == 'med-small' {
		@media screen and ($type + -width: $breakpoint-med-small) {
			@content;
		}
	}
	@else if $size == 'med' {
		@media screen and ($type + -width: $breakpoint-med) {
			@content;
		}
	}
	@else if $size == 'large' {
		@media screen and ($type + -width: $breakpoint-med) {
			@content;
		}
	}
	@else if $size == 'custom' {
		@media screen and ($type + -width: $pixels + px) {
			@content;
		}
	}
	@else {
		@content;
	}
}
// Using the mixin
//.foo {
//	@include screen(large) {
//		width: 20%;
//	}
//	@include screen(med) {
//		width: 40%;
//	}
//	@include screen(med-small) {
//		width: 60%;
//	}
//	@include screen(small) {
//		width: 80%;
//	}
//	@include screen(custom, max, 400) {
//		width: 100%;
//	}
//}


// Define vertical, horizontal, or both position
@mixin center($position) {
	position: absolute;

	@if $position == 'vertical' {
		top: 50%;
		-webkit-transform: translateY(-50%);
		-ms-transform: translateY(-50%);
		transform: translateY(-50%);
	}
	@else if $position == 'horizontal' {
		left: 50%;
		-webkit-transform: translateX(-50%);
		-ms-transform: translateX(-50%);
		transform: translate(-50%);
	}
	@else if $position == 'both' {
		top: 50%;
		left: 50%;
		-webkit-transform: translate(-50%, -50%);
		-ms-transform: translate(-50%, -50%);
		transform: translate(-50%, -50%);
	}
}
// Using the mixin
//.foo {
//	@include center(both);
//}
//.foo-parent {
//	position: relative;
//}